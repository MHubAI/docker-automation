    
# Note: the DockerHub secret needs to be stored on the node you want to use
# for building and pushing images (login through docker)
dockerhub:
    username: mhubai

# NOTE: the GitHub pull access needs to be setup for the specified repo
#       on the node you want to use for building and pushing images
#       (e.g., the GitHub repository should be public)
github:
    # better if this is separated from the git folders users actually work into to avoid mess
    repository_folder: /home/mhubai/git/mhubai-org/models
    repository_url: https://github.com/MHubAI/models
    
    # useless for now, the premise is we always look at main anyhow
    branch: main

## --------------------------------

# NOTE: everything related to the timing of the build and push will be handled at a system level
#       and not at the level of this script. This script will be called by a system cron job:
#       https://stackoverflow.com/questions/10945806/how-to-add-a-cron-job-in-linux


## --------------------------------

# repository structure: which Dockerfiles should be built and pushed automatically

# relative path (wrt `folder`) of the docker images to build
# the images will be tagged following the structure:
# $DOCKERHUB_USERNAME/$REPOSITORY:$TAG
# where:
#   - $DOCKERHUB_USERNAME is set above
#   - $REPOSITORY is the name of model folder, specified in the dictionary below as the first  
#     key of the dictionary "images"
#   - $TAG is the name of the subfolder in `dockerfiles` where the Dockerfile is found, specified 
#     in the dictionary below as the second key of the dictionary "images" (sub-key of the first key)

images:
    base_nocuda:
        name: base
        version: nocuda
        dockerfile: base/dockerfiles/nocuda/Dockerfile
    base_cuda11.4:
        name: base
        version: cuda11.4
        dockerfile: base/dockerfiles/cuda11.4/Dockerfile
    base_cuda12.0:
        name: base
        version: cuda12.0
        dockerfile: base/dockerfiles/cuda12.0/Dockerfile

    thresholder_nocuda:
        name: thresholder
        version: nocuda
        dockerfile: models/thresholder/dockerfiles/nocuda/Dockerfile

    platipy_nocuda:
        name: platipy
        version: nocuda
        dockerfile: models/platipy/dockerfiles/nocuda/Dockerfile
    platipy_cuda11.4:  
        name: platipy
        version: cuda11.4
        dockerfile: models/platipy/dockerfiles/cuda11.4/Dockerfile
    platipy_cuda12.0:
        name: platipy
        version: cuda12.0
        dockerfile: models/platipy/dockerfiles/cuda12.0/Dockerfile

    casust_cuda12.0:
        name: casust
        version: cuda12.0
        dockerfile: models/casust/dockerfiles/cuda12.0/Dockerfile